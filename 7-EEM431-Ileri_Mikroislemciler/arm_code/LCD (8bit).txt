#include <stdint.h>
#include <stdbool.h>
#include "inc/hw_types.h"
#include "inc/hw_memmap.h"
#include "driverlib/sysctl.h"
#include "driverlib/gpio.h"
#include "inc/hw_gpio.h"
#include "driverlib/interrupt.h"
#include "inc/hw_ints.h"
#include "string.h"
#include "driverlib/timer.h"

#define RS              GPIO_PIN_0
#define RW              GPIO_PIN_1
#define E               GPIO_PIN_2
#define LCDPORT         GPIO_PORTB_BASE
#define KontrolPORT     GPIO_PORTD_BASE

#define lcdpin          GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7 //D4 D5 D6 D7
void aktif();
void lcd_8bitayar();
void Lcd_Temizle();
void lcd_sendchar(uint8_t ch);
void lcd_sendcommand(uint8_t x);
void lcd_write(uint8_t line , uint8_t column,char str[]);
void lcd_durum(uint8_t line , uint8_t column);


int main()
{
    SysCtlClockSet(SYSCTL_SYSDIV_4 | SYSCTL_USE_PLL | SYSCTL_XTAL_16MHZ| SYSCTL_OSC_MAIN);

    lcd_8bitayar();
    Lcd_Temizle();

    lcd_write(1,1,"");
    lcd_write(2,2,"");

    while(1)
    {

    }
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void Lcd_Temizle()
{
    lcd_sendcommand(0x01);
    SysCtlDelay(1000);
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void lcd_write(uint8_t line , uint8_t column,char str[])
{
    lcd_durum(line,column);
    int i=0;
    while((str[i])!=0)
    {
        lcd_sendchar(str[i]);
        i++;
    }
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void lcd_sendchar(uint8_t ch)
{
    GPIOPinWrite(LCDPORT, lcdpin, ch );
    //GPIOPinWrite(LCDPORT, lcdpin, ch & 0xf0 );
    //GPIOPinWrite(LOWPORT,lowpin, ch & 0x0f);
    GPIOPinWrite(KontrolPORT, RS, 0x01);
    aktif();
    SysCtlDelay(50000);
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void lcd_sendcommand(uint8_t x)
{
            GPIOPinWrite(LCDPORT, lcdpin, x);
            //GPIOPinWrite(LCDPORT, lcdpin, x & 0xf0 );
            //GPIOPinWrite(LOWPORT, lowpin,x & 0x0f);
            GPIOPinWrite(KontrolPORT, RS, 0x00);
            aktif();

}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void lcd_durum(uint8_t line , uint8_t column)
{
    if(line==1)
    {
        lcd_sendcommand(0x80+(column-1));
    }
    else
    {
        lcd_sendcommand(0xc0+(column-1));
    }
    SysCtlDelay(10000);
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void lcd_8bitayar()
{
    SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOB);
    SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOD);
    GPIOPinTypeGPIOOutput(LCDPORT,0x0ff);//make all pin as output pin
    GPIOPinTypeGPIOOutput(KontrolPORT,0x0f);
          SysCtlDelay(5000000);
          GPIOPinWrite(KontrolPORT, RW,  0x00 );
          SysCtlDelay(5000000);
          GPIOPinWrite(KontrolPORT, RS,  0x00 );

          GPIOPinWrite(LCDPORT, lcdpin,  0x30 );
          aktif();

          GPIOPinWrite(LCDPORT, lcdpin,  0x30 );
          aktif();

          GPIOPinWrite(LCDPORT,lcdpin,  0x30 );
          aktif();
          GPIOPinWrite(LCDPORT,lcdpin,  0x20 );
          aktif();


          lcd_sendcommand(0x3c);//8bit,2satir,5*7 pixel
          lcd_sendcommand(0x06);//kusor pozisyonu artitt,kaydirma kapali
          lcd_sendcommand(0x0f);//Ekran açýk, Kursör kapali, Kursör blink kapali

          SysCtlDelay(50000);

}
        void aktif(void)
        {
          GPIOPinWrite(KontrolPORT, E, 0x04);
          SysCtlDelay(50000);
          GPIOPinWrite(KontrolPORT, E, 0x00);
          SysCtlDelay(50000);
        }
